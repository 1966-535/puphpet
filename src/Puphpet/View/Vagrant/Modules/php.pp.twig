{% if php.version.php54 == 1 %}
apt::ppa { 'ppa:ondrej/php5':
  before  => Class['php'],
}
{% endif %}

{% include 'Vagrant/Modules/PHP/'~webserver~'.pp.twig' %}

class { 'php::devel':
  require => Class['php'],
}

{% if php.modules.pear.installed == 1 %}
class { 'php::pear':
  require => Class['php'],
}

{% for key,pear in php.modules.pear %}
{# don't try to install the "installed" key #}
{% if key != 'installed' %}
php::pear::module { '{{ pear|raw }}':
  use_package => false,
}
{% endif %}
{% endfor %}

{% for pecl in php.modules.pecl %}
php::pecl::module { '{{ pecl|raw }}':
  use_package => false,
}
{% endfor %}

{% if php.modules.xdebug.installed == 1 %}
class { 'xdebug':
  service => '{{ webserver }}',
}

xdebug::config { 'cgi':
  remote_autostart => '{{ php.modules.xdebug.remote_autostart|default('1') }}',
  remote_port      => '{{ php.modules.xdebug.remote_port|default('9000') }}',
}
xdebug::config { 'cli':
  remote_autostart => '{{ php.modules.xdebug.remote_autostart|default('1') }}',
  remote_port      => '{{ php.modules.xdebug.remote_port|default('9000') }}',
}
{% endif %}{# if php.modules.xdebug.installed == 1 #}

{% if php.modules.xhprof.installed == 1 %}
php::pecl::module { 'xhprof':
  use_package => false,
}

{% if nginx is defined %}
nginx::resource::vhost { 'xhprof':
  ensure      => present,
  server_name => ['xhprof'],
  listen_port => 80,
  index_files => ['index.php'],
  www_root    => '/var/www/xhprof/xhprof_html',
  try_files   => ['$uri', '$uri/', '/index.php?$args'],
  require     => Php::Pecl::Module['xhprof']
}
{% else %}
apache::vhost { 'xhprof':
  server_name => 'xhprof',
  docroot     => '/var/www/xhprof/xhprof_html',
  port        => 80,
  priority    => '1',
  require     => Php::Pecl::Module['xhprof']
}
{% endif %}
{% endif %}{# if php.modules.xhprof.installed == 1 #}

{% endif %}{# if php.modules.pear.installed == 1 #}

{% if php.modules.composer.installed == 1 %}
class { 'php::composer': }
{% endif %}

{% for name,settings in php.inilist if settings is not empty %}
php::ini { '{{ name }}':
  value   => [{{ format.explode_and_quote(settings)|raw }}],
  target  => '{{ name }}.ini',
  service => '{{ php_service }}',
}
{% endfor %}
