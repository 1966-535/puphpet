{% import "PuphpetMainBundle:front:macros/popover.html.twig" as popover %}
<section id="server-packages">
    <div class="row">
        <div class="col-xs-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Server Packages</h3>
                </div>

                <div class="panel-body">
                    <input type="hidden" name="server[install]" value="1" />

                    <div class="row form-group">
                        <div class="col-xs-12">
                            <label for="server-packages">Installed Packages</label>
                            <select id="server-packages" name="server[packages][]"
                                    multiple class="form-control select-tags-editable">
                                {% for package in server.packages %}
                                    <option selected value="{{ package }}">{{ package }}</option>
                                {% endfor %}
                            </select>

                            <p class="help-block">
                                Packages to install via the OS package manager, separated by comma.
                                Do not add Apache/Nginx or PHP here - you will choose those later.
                            </p>

                            <p class="help-block">
                                Some common packages are (do not mix!):
                            </p>

                            <ul class="col-xs-6 col-sm-4 col-md-3">
                                Debian/Ubuntu:
                                <li><a href="#" class="addClickedToSelectizeElement"
                                        data-target="server-packages"
                                        data-value="vim">vim</a></li>
                                <li><a href="#" class="addClickedToSelectizeElement"
                                        data-target="server-packages"
                                        data-value="htop">htop</a></li>
                            </ul>

                            <ul class="col-xs-6 col-sm-4 col-md-3">
                                CentOS:
                                <li><a href="#" class="addClickedToSelectizeElement"
                                        data-target="server-packages"
                                        data-value="vim-common">vim-common</a></li>
                                <li><a href="#" class="addClickedToSelectizeElement"
                                        data-target="server-packages"
                                        data-value="htop">htop</a></li>
                            </ul>
                        </div>
                    </div>
                </div>

                {{ extra|raw }}

                <div class="panel-heading">
                    <h3 class="panel-title">Custom files</h3>
                </div>

                <div class="panel-body">
                    <h4>dotfiles</h4>

                    <p>
                        You can add all your dot files (<code>.bash_aliases</code>, <code>.vimrc</code>,
                        <code>.gitconfig</code>, etc),
                        to the <code>puphpet/files/dot/</code> folder that will appear after you extract your
                        generated zip file.
                    </p>

                    <p>
                        During initial startup, they will automatically be copied into the VM. There is
                        a sample
                        <code>.bash_aliases</code> file there for you to start with - overwrite at will!
                    </p>

                    <h4>Script files</h4>

                    <p>
                        You can run your own custom code after the VM finishes provisioning by adding files to the
                        <code>puphpet/files/exec-always</code>, <code>puphpet/files/exec-always-unprivileged</code>,
                        <code>puphpet/files/exec-once</code>, <code>puphpet/files/exec-once-unprivileged</code>,
                        <code>puphpet/files/startup-always</code>, <code>puphpet/files/startup-always-unprivileged</code>,
                        <code>puphpet/files/startup-once</code> and <code>puphpet/files/startup-once-unprivileged</code> folders.
                    </p>

                    <p>
                        <strong>Files are executed in alphabetical order</strong>. Files within <code>exec-once-*</code>
                        are run before files within <code>exec-always-*</code>, and files within <code>startup-once-*</code> are
                        run before files within <code>startup-always-*</code>. Files in <code>exec-once-*</code> and
                        <code>exec-always-*</code> are run before files in <code>startup-once-*</code>
                        and <code>startup-always-*</code>.
                    </p>

                    <p>
                        Files within <code>*-unprivileged</code> are run as the default user while the other ones area run
                        using sudo. Files within <code>*-unprivileged</code> are run after all other files on the same
                        running order as "privileged" files.
                    </p>

                    <p>
                        Files within <code>exec-always-*</code> will run on initial <code>$ vagrant up</code> and all
                        <code>$ vagrant provision</code>, while files within <code>exec-once-*</code> will
                        run only the first time you run Vagrant, unless you SSH into the VM and remove the
                        <code>/.puphpet-stuff/exec-once-ran</code> and/or <code>/.puphpet-stuff/exec-once-unprivileged-ran</code>
                        files and re-run Vagrant.
                    </p>

                    <p>
                        Files within <code>startup-always-*</code> will run on each <code>$ vagrant up</code>,
                        while files within <code>startup-once-*</code> will only run on the next time you run Vagrant,
                        unless you SSH into the VM and remove the <code>/.puphpet-stuff/startup-once-ran</code>
                        and/or <code>/.puphpet-stuff/startup-once-unprivileged-ran</code> files and re-run Vagrant.
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>
